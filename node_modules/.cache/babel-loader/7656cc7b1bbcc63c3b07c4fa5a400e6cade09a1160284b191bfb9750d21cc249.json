{"ast":null,"code":"var _jsxFileName = \"/Users/gabesmall/Downloads/Tumblr-Blog-Clone-Frontend/src/components/pages/PostCard.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport LikeButton from \"../LikeButton\";\nimport repost from \"../images/repeat.svg\";\nimport rec from \"../images/recomended.jpg\";\nimport fwd from \"../images/reply.svg\";\nimport cht from \"../images/chater.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostCard = _ref => {\n  _s();\n  let {\n    index,\n    posts,\n    getCommentsHandler,\n    showCommentHandler,\n    profile\n  } = _ref;\n  // creating likes\n  const [like, setLike] = useState(false);\n  const [count, setCount] = useState(0);\n  const [likeUpdate, setLikeUpdate] = useState(false);\n  const [allLikes, setAllLikes] = useState([]);\n  const [data, setData] = React.useState([]);\n\n  // console.log(profile)\n\n  const likeHandleSubmit = post => {\n    const likeInput = {\n      like: true\n    };\n    fetch(`http://localhost:4001/api/post/${post._id}/like`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(likeInput),\n      credentials: \"include\"\n    }).then(resp => resp.json()).then(data => {\n      setLikeUpdate(prevState => !prevState);\n      if (data.message === \"Deleted\") {\n        alert(\"Post unLiked\");\n      } else {\n        alert(\"Post liked\");\n      }\n      // console.log(data.data);\n    });\n  };\n\n  const getLikes = useCallback(posts => {\n    fetch(`http://localhost:4001/api/post/${posts._id}/getlikes`).then(resp => resp.json()).then(data => {\n      //   console.log(data.data);\n      setCount(data.data.length);\n      setAllLikes(data.data);\n    });\n  }, [posts]);\n  //   console.log(profile)\n  let userLiked;\n  const checkLike = likes => {\n    userLiked = likes.filter(like => like.user_id === profile._id);\n    if (userLiked.length >= 1) {\n      console.log('userLiked');\n      setLike(true);\n    }\n  };\n  useEffect(() => {\n    getLikes(posts);\n    checkLike(allLikes);\n  }, [likeUpdate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section2-A\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: rec,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginRight: \"80px\"\n      },\n      className: \"todayH\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todayL\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"follow\",\n          children: [posts.category, /*#__PURE__*/_jsxDEV(\"a\", {\n            style: {\n              backgroundColor: \"aliceblue\",\n              textDecoration: \"none\",\n              color: \"rgb(0, 184, 255)\",\n              marginLeft: \"120px\"\n            },\n            href: \"\",\n            children: \"Follow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginLeft: \"120px\"\n            },\n            children: posts.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"followH\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: \"17px\"\n          },\n          children: posts.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"img1\",\n        src: `http://localhost:4001/uploads/${posts.image}`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"follow\",\n        children: posts.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"follow\",\n        children: posts.hashtag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"repost\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"followBtn\",\n            onClick: () => getCommentsHandler(posts),\n            children: [posts._id.length, \" \", \"notes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"follower\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: fwd,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"10px\"\n            },\n            onClick: () => showCommentHandler(posts),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              width: 20,\n              src: cht,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: repost,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(LikeButton, {\n              className: \"\",\n              onClick: () => likeHandleSubmit(posts),\n              count: count,\n              profile: profile,\n              like: like\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, `${posts.user_id} + ${index}`, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(PostCard, \"Zpls2vwz/qDJX9PJzRMe3uuFQFI=\");\n_c = PostCard;\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","LikeButton","repost","rec","fwd","cht","PostCard","index","posts","getCommentsHandler","showCommentHandler","profile","like","setLike","count","setCount","likeUpdate","setLikeUpdate","allLikes","setAllLikes","data","setData","likeHandleSubmit","post","likeInput","fetch","_id","method","headers","body","JSON","stringify","credentials","then","resp","json","prevState","message","alert","getLikes","length","userLiked","checkLike","likes","filter","user_id","console","log","marginRight","category","backgroundColor","textDecoration","color","marginLeft","title","fontSize","text","image","hashtag","marginTop"],"sources":["/Users/gabesmall/Downloads/Tumblr-Blog-Clone-Frontend/src/components/pages/PostCard.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport LikeButton from \"../LikeButton\";\nimport repost from \"../images/repeat.svg\";\nimport rec from \"../images/recomended.jpg\";\nimport fwd from \"../images/reply.svg\";\nimport cht from \"../images/chater.png\";\n\nconst PostCard = ({\n  index,\n  posts,\n  getCommentsHandler,\n  showCommentHandler,\n  profile,\n}) => {\n  // creating likes\n  const [like, setLike] = useState(false);\n  const [count, setCount] = useState(0);\n  const [likeUpdate, setLikeUpdate] = useState(false);\n  const [allLikes, setAllLikes] = useState([]);\n  const [data, setData] = React.useState([]);\n\n  // console.log(profile)\n\n  const likeHandleSubmit = (post) => {\n    const likeInput = {\n      like: true,\n    };\n\n    fetch(`http://localhost:4001/api/post/${post._id}/like`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(likeInput),\n      credentials: \"include\",\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        setLikeUpdate(prevState => !prevState);\n        if (data.message === \"Deleted\") {\n          alert(\"Post unLiked\");\n        } else {\n          alert(\"Post liked\");\n        }\n        // console.log(data.data);\n      });\n  };\n\n  const getLikes = useCallback(\n    (posts) => {\n      fetch(`http://localhost:4001/api/post/${posts._id}/getlikes`)\n        .then((resp) => resp.json())\n        .then((data) => {\n          //   console.log(data.data);\n          setCount(data.data.length);\n          setAllLikes(data.data);\n        });\n    },\n    [posts]\n  );\n//   console.log(profile)\n  let userLiked;\n  const checkLike = (likes)=>{\n        userLiked = likes.filter((like) => like.user_id === profile._id);\n        if (userLiked.length >= 1) {\n            console.log('userLiked')\n            setLike(true)\n        }\n\n  }\n\nuseEffect(() => {\n  getLikes(posts);\n  checkLike(allLikes);\n}, [likeUpdate]);\n\n\n  return (\n    <div className=\"section2\" key={`${posts.user_id} + ${index}`}>\n      <div className=\"section2-A\">\n        <img src={rec} alt=\"\" />\n      </div>\n\n      <div style={{ marginRight: \"80px\" }} className=\"todayH\">\n        <div className=\"todayL\">\n          <p className=\"follow\">\n            {posts.category}\n            <a\n              style={{\n                backgroundColor: \"aliceblue\",\n                textDecoration: \"none\",\n                color: \"rgb(0, 184, 255)\",\n                marginLeft: \"120px\",\n              }}\n              href=\"\"\n            >\n              Follow\n            </a>\n            <p style={{ marginLeft: \"120px\" }}>{posts.title}</p>\n          </p>\n        </div>\n\n        <div className=\"followH\">\n          <p style={{ fontSize: \"17px\" }}>{posts.text}</p>\n        </div>\n\n        <img\n          className=\"img1\"\n          src={`http://localhost:4001/uploads/${posts.image}`}\n          alt=\"\"\n        />\n        <p className=\"follow\">{posts.category}</p>\n        <p className=\"follow\">{posts.hashtag}</p>\n        <div className=\"repost\">\n          <div>\n            <button\n              className=\"followBtn\"\n              onClick={() => getCommentsHandler(posts)}\n            >\n              {\n                posts._id.length\n              }{\" \"}\n              notes\n            </button>\n          </div>\n          <div className=\"follower\">\n            <img src={fwd} alt=\"\" />\n            <div\n              style={{ marginTop: \"10px\" }}\n              onClick={() => showCommentHandler(posts)}\n            >\n              <img width={20} src={cht} alt=\"\" />\n            </div>\n            <img src={repost} alt=\"\" />\n\n            <div>\n              {/* <input type=\"text\" /> */}\n              <LikeButton\n                className=\"\"\n                onClick={() => likeHandleSubmit(posts)}\n                count={count}\n                profile={profile}\n                like={like}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}